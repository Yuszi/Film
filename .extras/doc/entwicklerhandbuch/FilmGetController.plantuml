' Copyright (C) 2019 - present Juergen Zimmermann, Hochschule Karlsruhe
'
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <https://www.gnu.org/licenses/>.

' Preview durch <Alt>d

@startuml Controller-Klasse

interface Promise<T>

package @nestjs/common {
  class "@Controller" as Controller
  hide Controller circle

  class "@Get" as Get
  hide Get circle

  class "@Req" as Req
  hide Req circle

  class "@Res" as Res
  hide Res circle

  class "@Param" as Param
  hide Param circle

  class "@Query" as Query
  hide Query circle

  class "@UseInterceptors" as UseInterceptors
  hide UseInterceptors circle
}

package express {
  class Request
  class Response

  Response .[hidden].> Controller
}

package film {
  package entity #FFFFFF {
    class film <<entity>>

    film .[hidden].> Promise
    film .[hidden].> Request
  }

  package service {
    class filmReadService << control >>
  }

  package rest #DDDDDD {
    filmQuery -up-|> film

    class filmGetController << control >> << @Controller() >> << @UseGuards() >> << @UseInterceptors() >> {
      + @Get() async findById(@Param() id: string, @Req() req: Request, @Headers() version: string, @Res() res: Response): Promise<Response<filmModel | undefined>>
      + @Get() async find(@Query() query: filmQuery, @Req() req: Request,  @Res() res: Response): Promise<Response<FilmeModel | undefined>>
    }

    filmGetController o--> "1" filmReadService : service

    filmGetController ..> Controller
    filmGetController ..> Request
    filmGetController ..> Response
    filmGetController ..> Promise
    filmGetController .up.> filmModel
    filmGetController .up.> filmQuery

    filmReadService .[hidden].> Request
    filmReadService .[hidden].> Promise
    Response .right[hidden].> Controller
  }
}

hide empty members

footer (c) Juergen Zimmermann

@enduml
