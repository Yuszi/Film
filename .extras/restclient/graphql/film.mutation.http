### Einloggen in der Rolle "admin", "mitarbeiter" und "kunde"
// @name login
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(username: "admin", password: "p") { token expiresIn roles }
}

### Einloggen in der Rolle "mitarbeiter" und "kunde"
// @name login
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(username: "alfred.alpha", password: "p") { token expiresIn roles }
}

### Einloggen in der Rolle "kunde"
// @name login
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(username: "dirk.delta", password: "p") { token expiresIn roles }
}

### Einloggen mit falschem Passwort
// @name login
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(username: "admin", password: "FALSCH") { token expiresIn roles }
}

### Neues Film anlegen
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  create(
    input: {
      name: "GraphQL The Movie",
      sprache: "de-DE",
      rating: 8,
      genre: DRAMA,
      erscheinungsjahr: "2022-01-31",
      schlagwoerter: ["Client", "GraphQL"],
      hauptdarsteller: {
        rolle: "Oen",
        vorname: "Reanu",
        nachname: "Keeves",
        alter: 45
      }
    }
  )
}

### Neues Film mit ungueltigen Daten anlegen
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  create(
    input: {
      name: "Ungueltig",
      sprache: "de-DE",
      rating: -1,
      genre: ACTION,
      erscheinungsjahr: "2022-01-31",
      schlagwoerter: ["JAVA", "SCRIPT"],
      hauptdarsteller: {
        rolle: "Hauptrolle",
        vorname: "Max",
        nachname: "Mustermann",
        alter: 54
      }
    }
  )
}

### Vorhandenes Film aktualisieren
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  update(
    input: {
      id: 1010,
      version: 0,
      name: "GraphQL The Movie",
      sprache: "en-EN",
      rating: 9,
      genre: DRAMA,
      erscheinungsjahr: "2022-01-31",
      schlagwoerter: ["Client", "GraphQL"],
      hauptdarsteller: {
        rolle: "Tory Stank",
        vorname: "Melon",
        nachname: "Eask",
        alter: 52
      }
    }
  )
}

### Vorhandenes Film mit ungueltigen Werten aktualisieren
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  update(
    input: {
      id: 1010,
      version: 0,
      name: "falsche-NAME",
      rating: -1,
      genre: ACTION,
      erscheinungsjahr: "12345-123-123",
    }
  )
}

### Nicht-Vorhandenes Film aktualisieren
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  update(
    input: {
      id: 999999,
      version: 0,
      name: "Not-Found The Movie",
      sprache: "en-EN",
      rating: 6,
      genre: DRAMA,
      erscheinungsjahr: "2022-01-31",
      schlagwoerter: ["Client", "GraphQL"],
      hauptdarsteller: {
        rolle: "FourOFour",
        vorname: "Melon",
        nachname: "Eask",
        alter: 52
      }
    }
  )
}

### Vorhandenes Film loeschen
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  delete(id: "1010")
}
