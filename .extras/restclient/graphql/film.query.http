### Suche id, version und hauptdarsteller von allen Filme
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

{
  filme {
    id
    version
    hauptdarsteller {
      rolle
    }
  }
}

### Suche name, version, art und hauptdarsteller von einem Film mit vorhandener Film-ID
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query ($id: ID! = "1000") {
  film(id: $id) {
    name
    version
    genre
    hauptdarsteller{
      vorname,
      nachname
    }
  }
}

{
  "id": "1"
}

### Suche hauptdarsteller von einem Film mit nicht-vorhandener Film-ID
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query ($id: ID! = "999999") {
  film(id: $id) {
    hauptdarsteller {
      vorname,
      nachname
    }
  }
}

{
  "id": "999999"
}

### Suche art von Filme mit vorhandenem Hauptdarsteller
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query ($titel: String = "Alpha") {
  filme(hauptdarsteller: $titel) {
    genre
  }
}

{
  "hauptdarsteller": "Alpha"
}

### Suche art, schlagwoerter und hauptdarsteller von Filme mit vorhandenem Hauptdarsteller
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query ($titel: String = "a") {
  filme(hauptdarsteller: $titel) {
    genre
    schlagwoerter
    hauptdarsteller {
      rolle
    }
  }
}

{
  "name": "a"
}

### Suche art von Filme mit NICHT-vorhandenem Name
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query ($name: String = "Nichtvorhanden") {
  filme(name: $name) {
    genre
  }
}

{
  "name": "Nichtvorhanden"
}
